{"id":"glitchlings-1","content_hash":"6901d60b92b39523fe7f49ff5e49687300e3e93880eba8f47190496756c72e5a","title":"Legacy glitchling parameter cleanup","description":"Summarizes the removed aliases and YAML schema changes formerly tracked in CHANGELOG.md:\\n- Legacy glitchling parameter aliases (e.g., max_change_rate, replacement_rate) are removed in favor of rate.\\n- YAML attack rosters must use the name: field instead of deprecated type:.\\n- Default rate handling now lives within each glitchling; glitchlings.zoo._rate was removed.","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-10-31T01:23:09.556078993Z","updated_at":"2025-10-31T01:23:12.394891903Z","closed_at":"2025-10-31T01:23:12.394891903Z"}
{"id":"glitchlings-2","content_hash":"411587192877b0ce54185723011d9c1d7ee3d6852d3f48e6a3fe048fe6eb6db7","title":"Development environment reference","description":"Captured the setup guidance previously stored in docs/development.md:\\n- Requires Python 3.10+, optional Rust toolchain with maturin.\\n- Create a virtual environment, install via 'pip install -e .[dev]' (add prime or vectors extras as needed).\\n- Install pre-commit hooks with 'pre-commit install'.\\n- Rebuild or extend the bundled lexicon via 'glitchlings build-lexicon' commands when updating synonym caches.\\n- Run tests with 'pytest' and quality gates: ruff check ., black --check ., isort --check-only ., python -m mypy --config-file pyproject.toml, pytest --maxfail=1 --disable-warnings -q.\\n- Compile Rust accelerators using 'maturin develop -m rust/zoo/Cargo.toml'; toggle GLITCHLINGS_RUST_PIPELINE to force Python path.\\n- Additional tips: rerun maturin after editing rust/zoo/, smoke-test CLI with 'python -m glitchlings --help', keep docs/index.md aligned with behaviour changes, reference docs/release-process.md for publishing steps, and validate YAML attack rosters via glitchlings.config.ATTACK_CONFIG_SCHEMA.","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-10-31T01:23:17.33338549Z","updated_at":"2025-10-31T01:23:19.792751132Z","closed_at":"2025-10-31T01:23:19.792751132Z"}
{"id":"glitchlings-3","content_hash":"f997472e92838f662d19fb8a2931336c0b07938b7ec838930296391c82795658","title":"Add ekkokin homophone tests","description":"Expand ekkokin test coverage referencing wiki_homophones.txt per TDD.","notes":"Added ekkokin tests covering metadata and homophone replacements; currently failing (module missing).\n- Generated structured homophone asset and staged it for Python/Rust consumption.\n- Implemented ekkokin Python and Rust homophone pipelines with the shared asset.\n- Added weighting normalization and RNG parity tests to cover expected behaviour.\nValidated casing preservation and packaging coverage for the shared homophone asset.\nRegenerated CLI usage docs, ran lint/type gates, and synced ekkokin tests for rust/python parity.\nSet CLI doc generator to clamp COLUMNS=80 so README snapshots match the linted help output.","status":"in_progress","priority":2,"issue_type":"task","created_at":"2025-10-31T02:57:18.524973455Z","updated_at":"2025-10-31T14:41:19.158283Z"}
{"id":"glitchlings-52fe","content_hash":"cce5519d2256f46f6c649d1fb425643c7bd00249a1bccd981eb5c4525044a8a8","title":"Reconcile beads workflow guidance","description":"Install the bd CLI properly, run quickstart, open a tracking entry for this fix, and adjust AGENTS.md to clarify future expectations.","notes":"Installed the bd CLI from the upstream release, ran quickstart, refreshed AGENTS.md with explicit setup steps, and ensured the rust extension is importable without try/except.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T16:31:37.418520804Z","updated_at":"2025-10-31T16:35:23.57752486Z","closed_at":"2025-10-31T16:35:23.57752486Z"}
{"id":"glitchlings-b11e","content_hash":"d63341497cd0cd32f22aa0c41bdff899bc169323e370fb3a98501444f328d45c","title":"Ensure rust pipeline tests run without skips","description":"Alias the compiled extension, install required test dependencies, and document beads usage.","notes":"Aliased the compiled _zoo_rust module into the glitchlings namespace so the rust pipeline is detected, installed the venv test dependencies, ran pytest -rs with zero skips, and clarified AGENTS.md that beads entries are mandatory.","status":"closed","priority":1,"issue_type":"chore","created_at":"2025-10-31T16:00:31.61275524Z","updated_at":"2025-10-31T16:01:47.748091307Z","closed_at":"2025-10-31T16:01:47.748101172Z"}
