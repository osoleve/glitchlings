{"id":"glitchlings-08a0","content_hash":"587d04455d9706e561bc621116b7b2822a3aaf054f230a9f068ffbce40a428cf","title":"Run full pytest suite","description":"","notes":"Installed pytest dependencies and ran python3 -m pytest --capture=no with full success (255 passed, 21 skipped).","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-11-01T15:10:01.867524267-04:00","updated_at":"2025-11-01T15:13:37.684286134-04:00","closed_at":"2025-11-01T15:13:37.684291688-04:00"}
{"id":"glitchlings-0939","content_hash":"be70d9170828e27aa8550dbfef05f87c7ec79b2de1e1fde9833d318392feeee1","title":"Review ekkokin implementation for bugs/testing gaps","description":"Audit ekkokin glitchling code and tests for issues.","notes":"Identified pipeline descriptor bug: weighting isn't normalized when mutated via set_param, which breaks Rust pipeline; test gap noted.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-31T18:10:49.640512174-04:00","updated_at":"2025-10-31T18:16:42.665572355-04:00","closed_at":"2025-10-31T18:16:42.665576429-04:00"}
{"id":"glitchlings-1","content_hash":"6901d60b92b39523fe7f49ff5e49687300e3e93880eba8f47190496756c72e5a","title":"Legacy glitchling parameter cleanup","description":"Summarizes the removed aliases and YAML schema changes formerly tracked in CHANGELOG.md:\\n- Legacy glitchling parameter aliases (e.g., max_change_rate, replacement_rate) are removed in favor of rate.\\n- YAML attack rosters must use the name: field instead of deprecated type:.\\n- Default rate handling now lives within each glitchling; glitchlings.zoo._rate was removed.","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-10-31T01:23:09.556078993Z","updated_at":"2025-10-31T01:23:12.394891903Z","closed_at":"2025-10-31T01:23:12.394891903Z"}
{"id":"glitchlings-2","content_hash":"411587192877b0ce54185723011d9c1d7ee3d6852d3f48e6a3fe048fe6eb6db7","title":"Development environment reference","description":"Captured the setup guidance previously stored in docs/development.md:\\n- Requires Python 3.10+, optional Rust toolchain with maturin.\\n- Create a virtual environment, install via 'pip install -e .[dev]' (add prime or vectors extras as needed).\\n- Install pre-commit hooks with 'pre-commit install'.\\n- Rebuild or extend the bundled lexicon via 'glitchlings build-lexicon' commands when updating synonym caches.\\n- Run tests with 'pytest' and quality gates: ruff check ., black --check ., isort --check-only ., python -m mypy --config-file pyproject.toml, pytest --maxfail=1 --disable-warnings -q.\\n- Compile Rust accelerators using 'maturin develop -m rust/zoo/Cargo.toml'; toggle GLITCHLINGS_RUST_PIPELINE to force Python path.\\n- Additional tips: rerun maturin after editing rust/zoo/, smoke-test CLI with 'python -m glitchlings --help', keep docs/index.md aligned with behaviour changes, reference docs/release-process.md for publishing steps, and validate YAML attack rosters via glitchlings.config.ATTACK_CONFIG_SCHEMA.","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-10-31T01:23:17.33338549Z","updated_at":"2025-10-31T01:23:19.792751132Z","closed_at":"2025-10-31T01:23:19.792751132Z"}
{"id":"glitchlings-2bd9","content_hash":"8552da59c1c6cbcb9a2ad1068a52b6fcd13ebf00024ae115a9927369d0ee0ed0","title":"Implement Spectroll color swapping glitchling","description":"Add tests, implementation, drift mode, registration, and docs for Spectroll","notes":"Implemented Spectroll glitchling with literal and drift modes, tests, docs, and examples","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T16:56:36.404926724Z","updated_at":"2025-11-01T17:06:24.500058627Z","closed_at":"2025-11-01T17:06:24.500069241Z"}
{"id":"glitchlings-3","content_hash":"f997472e92838f662d19fb8a2931336c0b07938b7ec838930296391c82795658","title":"Add ekkokin homophone tests","description":"Expand ekkokin test coverage referencing wiki_homophones.txt per TDD.","notes":"Added ekkokin tests covering metadata and homophone replacements; currently failing (module missing).\n- Generated structured homophone asset and staged it for Python/Rust consumption.\n- Implemented ekkokin Python and Rust homophone pipelines with the shared asset.\n- Added weighting normalization and RNG parity tests to cover expected behaviour.\nValidated casing preservation and packaging coverage for the shared homophone asset.\nRegenerated CLI usage docs, ran lint/type gates, and synced ekkokin tests for rust/python parity.\nSet CLI doc generator to clamp COLUMNS=80 so README snapshots match the linted help output.","status":"in_progress","priority":2,"issue_type":"task","created_at":"2025-10-31T02:57:18.524973455Z","updated_at":"2025-10-31T14:41:19.158283Z"}
{"id":"glitchlings-4f7d","content_hash":"6413f7acf189a1bfbc74b450bf571f4352492b7bbff1b572e61ff73ffe6255ef","title":"Fix Rushmore pipeline tests","description":"","notes":"Aligned rust pipeline tests with Rushmore plan ordering and descriptor parity; python reference now mirrors pipeline seeds before asserting Rust output. Ran pytest -o addopts='' tests/core/test_glitchling_core.py.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-11-01T21:18:28.175487734Z","updated_at":"2025-11-01T21:18:45.458608413Z","closed_at":"2025-11-01T21:18:45.458619753Z"}
{"id":"glitchlings-52fe","content_hash":"cce5519d2256f46f6c649d1fb425643c7bd00249a1bccd981eb5c4525044a8a8","title":"Reconcile beads workflow guidance","description":"Install the bd CLI properly, run quickstart, open a tracking entry for this fix, and adjust AGENTS.md to clarify future expectations.","notes":"Installed the bd CLI from the upstream release, ran quickstart, refreshed AGENTS.md with explicit setup steps, and ensured the rust extension is importable without try/except.","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T16:31:37.418520804Z","updated_at":"2025-10-31T16:35:23.57752486Z","closed_at":"2025-10-31T16:35:23.57752486Z"}
{"id":"glitchlings-822b","content_hash":"e3018e9d1c9dcc2ee3a16607770a033b28d531585ead521aaa468668a65ae20a","title":"Fix mypy compat errors","description":"","notes":"Resolved compat and asset helper mypy complaints; attr assignments use setattr and optional dependency load guard tightened.","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-11-01T14:48:42.968356693-04:00","updated_at":"2025-11-01T14:49:39.509815233-04:00","closed_at":"2025-11-01T14:49:39.509845789-04:00"}
{"id":"glitchlings-93d6","content_hash":"80b86d31abb9bac9ba7ae7993e90d8c45b8bc91a281864fbeb49893191a474d6","title":"Normalize Ekkokin weighting in pipeline descriptor","description":"Ensure weighting remains normalized when mutating Ekkokin, add regression tests.","notes":"Normalized weighting via Ekkokin.set_param override and pipeline descriptor guard; added regression test asserting mutated weighting stays lowercase. Unable to run pytest because python installation lacks pip/pytest modules.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-31T19:06:01.032216669-04:00","updated_at":"2025-10-31T19:07:30.344882365-04:00","closed_at":"2025-10-31T19:07:30.34488724-04:00"}
{"id":"glitchlings-94f2","content_hash":"0439bec6a8938ec3e6970b745d0b1d96285cfbf9a4150cb940a6766f210abe20","title":"Install mypy","description":"","notes":"Installed mypy via user pip with break-system-packages flag and verified with python3 -m mypy src","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-11-01T14:54:37.989341841-04:00","updated_at":"2025-11-01T15:05:13.210392903-04:00","closed_at":"2025-11-01T15:05:13.210402532-04:00"}
{"id":"glitchlings-a5fd","content_hash":"763d6a79483b20efbf16386a52c98317252c6549aacaf6ade444ac08b7974b1d","title":"Merge Reduple into Rushmore with configurable attack modes","description":"Combine behaviors, remove redundant docs, regenerate.","notes":"Merged Reduple into Rushmore with configurable attack modes, updated tests/docs, and regenerated CLI reference.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T20:20:08.770182444Z","updated_at":"2025-11-01T20:50:51.06415034Z","closed_at":"2025-11-01T20:50:51.064158536Z"}
{"id":"glitchlings-b11e","content_hash":"d63341497cd0cd32f22aa0c41bdff899bc169323e370fb3a98501444f328d45c","title":"Ensure rust pipeline tests run without skips","description":"Alias the compiled extension, install required test dependencies, and document beads usage.","notes":"Aliased the compiled _zoo_rust module into the glitchlings namespace so the rust pipeline is detected, installed the venv test dependencies, ran pytest -rs with zero skips, and clarified AGENTS.md that beads entries are mandatory.","status":"closed","priority":1,"issue_type":"chore","created_at":"2025-10-31T16:00:31.61275524Z","updated_at":"2025-10-31T16:01:47.748091307Z","closed_at":"2025-10-31T16:01:47.748101172Z"}
{"id":"glitchlings-b1b8","content_hash":"c52c8074644292ddd9580d4f7b093aaf3ec51dd5a4ae1c06f3464fb9c667dd24","title":"Handle optional rust alias import failure","description":"","notes":"Guarded optional rust alias import with try/except ImportError and re-ran mypy on src/glitchlings/__init__.py","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-11-01T15:09:11.782880457-04:00","updated_at":"2025-11-01T15:09:29.690820328-04:00","closed_at":"2025-11-01T15:09:29.690825026-04:00"}
{"id":"glitchlings-fc7f","content_hash":"d5d062c531d31bf1e14307d397fc3bc363790146024d7e70668d194ea497e1dc","title":"Fix Spectroll implementation per feedback","description":"Address issues with Spectroll color swapping, docs, and tests","notes":"Polished Spectroll colour swap logic, refreshed CLI listing via docs/build_cli_reference.py, and reran targeted tests.","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-11-01T18:22:29.788937139Z","updated_at":"2025-11-01T18:26:00.339533802Z","closed_at":"2025-11-01T18:26:00.339539274Z"}
