name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: linux

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Pin Python for PyO3
        shell: bash
        run: echo "PYO3_PYTHON=$(python -c 'import sys; print(sys.executable)')" >> "$GITHUB_ENV"

      - name: Install build dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Build wheels
        shell: bash
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-*"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BEFORE_BUILD: "pip install setuptools-rust"
          CIBW_ENVIRONMENT: "PYO3_PYTHON=python"

      - name: Build source distribution
        if: matrix.platform == 'linux'
        shell: bash
        run: |
          pip install build setuptools-rust
          python -m build --sdist --outdir dist

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.platform }}
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare dist directory
        shell: bash
        run: |
          mkdir -p dist
          find artifacts -name '*.whl' -exec cp {} dist/ \;
          find artifacts -name '*.tar.gz' -exec cp {} dist/ \;
          ls -lh dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
          packages-dir: dist
          user: __token__
          # password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

